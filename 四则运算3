#include<iostream>
#include<fstream>
#include<stdlib.h>
#include<time.h>
#include<string>
using namespace std;

void createArray(int A[], int B[], int count, int min, int max)
{
	while ((max - min + 1) < count)
	{
		cout << "数值范围输入错误，请重新输入数值范围(友情提示：数值范围应大于运算式的数量)！" << endl;
		cout << "请输入参与四则运算的数值范围(格式如：1  100)：";
		cin >> min >> max;
	}
	for (int i = 0; i < count; i++)
	{

		A[i] = min + rand() % (max - min + 1);
		B[i] = min + rand() % (max - min + 1);

		for (int j = 0; j < i; j++)
		{
			if (A[i] == A[j])
			{
				A[i] = min + rand() % (max - min + 1);
				j = -1;
			}
		}
		for (int j = 0; j < i; j++)
		{
			if (B[i] == B[j])
			{
				B[i] = min + rand() % (max - min + 1);
				j = -1;
			}
		}
	}
}

void create_Operand(int A[],int min,int max)
{
	for (int i = 0; i < 4; i++)
	{
		A[i] = min + rand() % (max - min + 1);
	}
}

void create_Operator_JiaJian(string B[],int kuohao)
{
	if (1 == kuohao)
	{
		string C[3];
		for (int i = 0; i < 3; i++)
		{
			int Judge = rand() % 2;
			switch (Judge)
			{
			case 0:
				C[i] = '+'; break;
			case 1:
				C[i] = '-'; break;
			}
		}
		int intLeftLocation;
		intLeftLocation = 1 + rand() % 2;
		int intRightLocation;
		int a = intLeftLocation + 2;
		intRightLocation = a + rand() % (5 - a);
		B[intLeftLocation] = "(";
		B[intRightLocation] = ")";
		int j = 0;
		for (int i = 0; i < 5; i++)
		{
			if ((B[i] != "(") && (B[i] != ")"))
			{
				B[i] = C[j];
				j++;
			}
		}
	}
	else
	{
		for (int i = 0; i < 3; i++)
		{
			int Judge = rand() % 2;
			switch (Judge)
			{
			case 0:
				B[i] = '+'; break;
			case 1:
				B[i] = '-'; break;
			}
		}
	}
}

/*void create_Operator_ChengChu(string B[])
{
	for (int i = 0; i < 3; i++)
	{
		int Judge = rand() % 4;
		switch (Judge)
		{
		case 0:
			B[i] = '+'; break;
		case 1:
			B[i] = '-'; break;
		case 2:
			B[i] = 'x'; break;
		case 3:
			B[i] = '÷'; break;
		}
	}
}*/

int calculate_Jiajian(int A[], string B[],int kuohao,int minus,int max)
{
	if (1 == minus)
	{
		int result = A[0];
		if (1 == kuohao)
		{
			result = 0;
			if ((B[1] == "(") && (B[3] == ")"))
			{
				if (B[2] == "+")
				{
					result = A[1] + A[2];
				}
				else
				{
					result = A[1] - A[2];
				}
				if (B[0] == "+")
				{
					result = result + A[0];
				}
				else
				{
					result = A[0] - result;
				}
				if (B[4] == "+")
				{
					result = result + A[3];
				}
				else
				{
					result = result - A[3];
				}
			}
			if ((B[2] == "(") && (B[4] == ")"))
			{
				int result1 = 0;
				if (B[3] == "+")
				{
					result = A[2] + A[3];
				}
				else
				{
					result = A[2] - A[3];
				}
				if (B[0] == "+")
				{
					result1 = A[0] + A[1];
				}
				else
				{
					result1 = A[0] - A[1];
				}
				if (B[1] == "+")
				{
					result = result + result1;
				}
				else
				{
					result = result1 - result;
				}
			}
			if ((B[1] == "(") && (B[4] == ")"))
			{
				if (B[2] == "+")
				{
					result = A[1] + A[2];
				}
				else
				{
					result = A[1] - A[2];
				}
				if (B[3] == "+")
				{
					result = result + A[3];
				}
				else
				{
					result = result - A[3];
				}
				if (B[0] == "+")
				{
					result = result + A[0];
				}
				else
				{
					result = A[0] - result;
				}
			}
		}
		else
		{
			for (int i = 0; i < 3; i++)
			{
				if (B[i] == "+")
				{
					result = result + A[i + 1];
				}
				else
				{
					result = result - A[i + 1];
				}
			}
		}
		return result;
	}
	else
	{
		int result = A[0];
		if (1 == kuohao)
		{
			int result = 0;
			if ((B[1] == "(") && (B[3] == ")"))
			{
				if (B[2] == "+")
				{
					result = A[1] + A[2];
				}
				else
				{
					if (A[1] > A[2])
					{
						result = A[1] - A[2];
					}
					else
					{
						A[1] = max;
						result = A[1] - A[2];
					}
				}
				if (B[0] == "+")
				{
					result = result + A[0];
				}
				else
				{
					if (A[0] > result)
					{
						result = A[0] - result;
					}
					else
					{
						B[0] = "+";
						result = result + A[0];
					}
				}
				if (B[4] == "+")
				{
					result = result + A[3];
				}
				else
				{
					if (result > A[3])
					{
						result = result - A[3];
					}
					else
					{
						A[3] = result / 2;
						result = result - A[3];
					}
				}
			}
			if ((B[2] == "(") && (B[4] == ")"))
			{
				int result1 = 0;
				if (B[3] == "+")
				{
					result = A[2] + A[3];
				}
				else
				{
					if (A[2] > A[3])
					{
						result = A[2] - A[3];
					}
					else
					{
						A[2] = max;
						result = A[2] - A[3];
					}
				}
				if (B[0] == "+")
				{
					result1 = A[0] + A[1];
				}
				else
				{
					if (A[0] > A[1])
					{
						result1 = A[0] - A[1];
					}
					else
					{
						A[0] = max;
						result1 = A[0] - A[1];
					}
				}
				if (B[1] == "+")
				{
					result = result + result1;
				}
				else
				{
					if (result1 > result)
					{
						result = result1 - result;
					}
					else
					{
						B[1] = "+";
						result = result + result1;
					}
				}
			}
			if ((B[1] == "(") && (B[4] == ")"))
			{
				if (B[2] == "+")
				{
					result = A[1] + A[2];
				}
				else
				{
					if (A[1] > A[2])
					{
						result = A[1] - A[2];
					}
					else
					{
						A[1] = max;
						result = A[1] - A[2];
					}
				}
				if (B[3] == "+")
				{
					result = result + A[3];
				}
				else
				{
					if (result > A[3])
					{
						result = result - A[3];
					}
					else
					{
						B[3] = "+";
						result = result + A[3];
					}
				}
				if (B[0] == "+")
				{
					result = result + A[0];
				}
				else
				{
					if (A[0] > result)
					{
						result = A[0] - result;
					}
					else
					{
						B[0] = "+";
						result = result + A[0];
					}
				}
			}
		}
		else
		{
			for (int i = 0; i < 3; i++)
			{
				if (B[i] == "+")
				{
					result = result + A[i + 1];
				}
				else
				{
					if (A[i]>A[i + 1])
					{
						result = result - A[i + 1];
					}
					else
					{
						B[i] == "+";
						result = result + A[i + 1];
					}
				}
			}
		}
		return result;
	}
}

void output_kuohaoScreen(int A[], string B[], int kuohao)
{
	if (1 == kuohao)
	{
		if ((B[1] == "(") && (B[3] == ")"))
		{
			cout << A[0] << B[0] << B[1] << A[1] << B[2] << A[2] << B[3] << B[4] << A[3] << " = " << endl;
		}
		if ((B[2] == "(") && (B[4] == ")"))
		{
			cout << A[0] << B[0] << A[1] << B[1] << B[2] << A[2] << B[3] << A[3] << B[4] << " = " << endl;
		}
		if ((B[1] == "(") && (B[4] == ")"))
		{
			cout << A[0] << B[0] << B[1] << A[1] << B[2] << A[2] << B[3] << A[3] << B[4] << " = " << endl;
		}
	}
	else
	{
		for (int i = 0; i < 3; i++)
		{
			cout << A[i] << " " << B[i] << " ";
		}
		cout << A[3] << " = " << endl;
	}
}

void minus_JiaJian(int A[], string B[], int min, int max, int minus,int kuohao)
{
	int inputResult;
	create_Operand(A, min, max);
	create_Operator_JiaJian(B,kuohao);
	cout << "请输入算式的结果：";
	output_kuohaoScreen(A, B, kuohao);
	cin >> inputResult;
	int calculateResult = calculate_Jiajian(A, B, kuohao, minus, max);
	if (calculateResult == inputResult)
	{
		cout << "恭喜你答对了！" << endl;
	}
	else
	{
		cout << "答错了，继续加油哦！";
	}
}

void main()
{
	int array_A[100], array_B[100];
	int arrayA[10];
	string arrayB[10];
	int count;
	cout << "请输入运算式的数量：";
	cin >> count;
	int min, max;
	cout << "请输入数值的范围：";
	cin >> min >> max;
	createArray(array_A, array_B, count, min, max);
	for (int i = 0; i < count; i++)
	{
		cout << array_A[i] << "\t" << array_B[i] << endl;
	}
	for (int i = 0; i < count; i++)
	{
		minus_JiaJian(arrayA, arrayB, min, max, 0, 1);
	}
}
